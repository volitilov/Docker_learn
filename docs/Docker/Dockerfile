# Сдесь хронится информацио комманд Dockerfile

# Dockerfile представляет собой набор инструкций, на основе которых строится 
# новый образ. Каждая инструкция добавляет новый слой к образу.

# :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

ARG CODE_VERSION=latest
# аргументы сборки

FROM node:14-alpine as node 
# Указывает с какого пакета/образа из хаба начать, тосеть взять за основу

LABEL version="1.0"
# мета информация

MAINTAINER
# Сообщает Docker автора образа и его email

ADD --chown=root *.json ./
ADD myarc.tar.gz /user/src/app
ADD https://example.ru/myarc.tar.gz /user/src/app
# Инсрукция ADD добавляет файлы или папки из нашего билд-окружения в образ, 
# что полезно например при установке приложения.
# Источником может быть URL, имя файла или директория.

COPY *.json ./
# Инструкция COPY отличается от ADD тем, что предназначена для копирования 
# локальных файлов из билд-контекста и не поддерживает распаковки файлов

ONBUILD ADD . /app/src
# Инструкция ONBUILD добавляет триггеры в образы. Триггер исполняется, когда 
# образ используется как базовый для другого образа, например, когда исходный 
# код, нужный для образа еще не доступен, но требует для работы конкретного 
# окружения.

EXPOSE 80/tcp
# говорит Docker, что приложение в контейнере должно использовать определенный 
# порт в контейнере. Это не означает, что вы можете автоматически получать 
# доступ к сервису, запущенному на порту контейнера. По соображениям безопасности 
# Docker не открывает порт автоматически, но ожидает, когда это сделает 
# пользователь в команде docker run. Вы можете указать множество инструкций 
# EXPOSE для указания, какие порты должны быть открыты.

STOPSIGNAL 9
# сигнал при остановке контейнера

ENTRYPOINT ['top', '-c']
# Часто команду CMD путают с ENTRYPOINT. Разница в том, что вы не можете 
# перегружать ENTRYPOINT при запуске контейнера. 
# При запуске контейнера параметры передаются команде, указанной в ENTRYPOINT.
# ENTRYPOINT иеет преоретет над CMD, тоесть сначала будут выполняться команда
# ENTRYPOINT

CMD ['node', './main.js']
CMD node ./main.js
# Инструкция CMD указывает, какую команду необходимо запустить, когда 
# контейнер запущен. В отличие от команды RUN указанная команда исполняется 
# не во время построения образа, а во время запуска контейнера.

WORKDIR /usr/src/app
# С помощью WORKDIR можно установить рабочую директорию, откуда будут 
# запускаться команды ENTRYPOINT и CMD.

SHELL ["/bin/sh", "-c"]
# устанавливает какой шел будет использоваться после данной строки

RUN echo hello
# выполняет команду shell внутри образа

ENV FOO=1
ENV BAR=$FOO
# устанавливает переменные окружения в образе, будут хрониться в образе

USER kg
# Специфицирует пользователя, под которым должен быть запущен образ. Мы можем 
# указать имя пользователя или UID и группу или GID.

VOLUME
# Инструкция VOLUME добавляет тома в образ. Том — папка в одном или более 
# контейнерах или папка хоста, проброшенная через Union File System (UFS).
# Тома могут быть расшарены или повторно использованы между контейнерами. Это 
# позволяет добавлять и изменять данные без коммита в образ.
# создается точка монтирования для любого контейнера, созданного из образа. 
# Таким образом вы можете указывать и несколько томов в массиве.

